// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "asd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pt2 {

namespace {

const ::google::protobuf::Descriptor* asd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  asd_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_asd_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_asd_2eproto() {
  protobuf_AddDesc_asd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "asd.proto");
  GOOGLE_CHECK(file != NULL);
  asd_descriptor_ = file->message_type(0);
  static const int asd_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(asd, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(asd, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(asd, d_),
  };
  asd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      asd_descriptor_,
      asd::default_instance_,
      asd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(asd, _has_bits_[0]),
      -1,
      -1,
      sizeof(asd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(asd, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_asd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      asd_descriptor_, &asd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_asd_2eproto() {
  delete asd::default_instance_;
  delete asd_reflection_;
}

void protobuf_AddDesc_asd_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_asd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tasd.proto\022\003pt2\"&\n\003asd\022\t\n\001a\030\001 \002(\t\022\t\n\001s\030"
    "\002 \002(\005\022\t\n\001d\030\003 \002(\005", 56);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "asd.proto", &protobuf_RegisterTypes);
  asd::default_instance_ = new asd();
  asd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_asd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_asd_2eproto {
  StaticDescriptorInitializer_asd_2eproto() {
    protobuf_AddDesc_asd_2eproto();
  }
} static_descriptor_initializer_asd_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asd::kAFieldNumber;
const int asd::kSFieldNumber;
const int asd::kDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asd::asd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pt2.asd)
}

void asd::InitAsDefaultInstance() {
}

asd::asd(const asd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pt2.asd)
}

void asd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_ = 0;
  d_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

asd::~asd() {
  // @@protoc_insertion_point(destructor:pt2.asd)
  SharedDtor();
}

void asd::SharedDtor() {
  a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void asd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return asd_descriptor_;
}

const asd& asd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_asd_2eproto();
  return *default_instance_;
}

asd* asd::default_instance_ = NULL;

asd* asd::New(::google::protobuf::Arena* arena) const {
  asd* n = new asd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void asd::Clear() {
// @@protoc_insertion_point(message_clear_start:pt2.asd)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(asd, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<asd*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(s_, d_);
    if (has_a()) {
      a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool asd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pt2.asd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string a = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a().data(), this->a().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pt2.asd.a");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_s;
        break;
      }

      // required int32 s = 2;
      case 2: {
        if (tag == 16) {
         parse_s:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s_)));
          set_has_s();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_d;
        break;
      }

      // required int32 d = 3;
      case 3: {
        if (tag == 24) {
         parse_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &d_)));
          set_has_d();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pt2.asd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pt2.asd)
  return false;
#undef DO_
}

void asd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pt2.asd)
  // required string a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pt2.asd.a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->a(), output);
  }

  // required int32 s = 2;
  if (has_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->s(), output);
  }

  // required int32 d = 3;
  if (has_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->d(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pt2.asd)
}

::google::protobuf::uint8* asd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pt2.asd)
  // required string a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pt2.asd.a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->a(), target);
  }

  // required int32 s = 2;
  if (has_s()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->s(), target);
  }

  // required int32 d = 3;
  if (has_d()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->d(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pt2.asd)
  return target;
}

int asd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pt2.asd)
  int total_size = 0;

  if (has_a()) {
    // required string a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a());
  }

  if (has_s()) {
    // required int32 s = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s());
  }

  if (has_d()) {
    // required int32 d = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->d());
  }

  return total_size;
}
int asd::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pt2.asd)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a());

    // required int32 s = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s());

    // required int32 d = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->d());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pt2.asd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const asd* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const asd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pt2.asd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pt2.asd)
    MergeFrom(*source);
  }
}

void asd::MergeFrom(const asd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pt2.asd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_has_a();
      a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
    }
    if (from.has_s()) {
      set_s(from.s());
    }
    if (from.has_d()) {
      set_d(from.d());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void asd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pt2.asd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asd::CopyFrom(const asd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pt2.asd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void asd::Swap(asd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asd::InternalSwap(asd* other) {
  a_.Swap(&other->a_);
  std::swap(s_, other->s_);
  std::swap(d_, other->d_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = asd_descriptor_;
  metadata.reflection = asd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// asd

// required string a = 1;
bool asd::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void asd::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void asd::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void asd::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a();
}
 const ::std::string& asd::a() const {
  // @@protoc_insertion_point(field_get:pt2.asd.a)
  return a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void asd::set_a(const ::std::string& value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pt2.asd.a)
}
 void asd::set_a(const char* value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pt2.asd.a)
}
 void asd::set_a(const char* value, size_t size) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pt2.asd.a)
}
 ::std::string* asd::mutable_a() {
  set_has_a();
  // @@protoc_insertion_point(field_mutable:pt2.asd.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* asd::release_a() {
  // @@protoc_insertion_point(field_release:pt2.asd.a)
  clear_has_a();
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void asd::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    set_has_a();
  } else {
    clear_has_a();
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:pt2.asd.a)
}

// required int32 s = 2;
bool asd::has_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void asd::set_has_s() {
  _has_bits_[0] |= 0x00000002u;
}
void asd::clear_has_s() {
  _has_bits_[0] &= ~0x00000002u;
}
void asd::clear_s() {
  s_ = 0;
  clear_has_s();
}
 ::google::protobuf::int32 asd::s() const {
  // @@protoc_insertion_point(field_get:pt2.asd.s)
  return s_;
}
 void asd::set_s(::google::protobuf::int32 value) {
  set_has_s();
  s_ = value;
  // @@protoc_insertion_point(field_set:pt2.asd.s)
}

// required int32 d = 3;
bool asd::has_d() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void asd::set_has_d() {
  _has_bits_[0] |= 0x00000004u;
}
void asd::clear_has_d() {
  _has_bits_[0] &= ~0x00000004u;
}
void asd::clear_d() {
  d_ = 0;
  clear_has_d();
}
 ::google::protobuf::int32 asd::d() const {
  // @@protoc_insertion_point(field_get:pt2.asd.d)
  return d_;
}
 void asd::set_d(::google::protobuf::int32 value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:pt2.asd.d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pt2

// @@protoc_insertion_point(global_scope)
